[{"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx":"1","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts":"2","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx":"3","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx":"4","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx":"5","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx":"6","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx":"7","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx":"8","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx":"9","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx":"10","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx":"11"},{"size":500,"mtime":1606177938000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1606177938000,"results":"14","hashOfConfig":"13"},{"size":403,"mtime":1607455177000,"results":"15","hashOfConfig":"13"},{"size":3180,"mtime":1607455177000,"results":"16","hashOfConfig":"13"},{"size":2792,"mtime":1607999264777,"results":"17","hashOfConfig":"13"},{"size":1141,"mtime":1607999264778,"results":"18","hashOfConfig":"13"},{"size":3192,"mtime":1608501903846,"results":"19","hashOfConfig":"13"},{"size":2658,"mtime":1607999264778,"results":"20","hashOfConfig":"13"},{"size":2665,"mtime":1607999264778,"results":"21","hashOfConfig":"13"},{"size":1142,"mtime":1607999264777,"results":"22","hashOfConfig":"13"},{"size":2077,"mtime":1608501508943,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18q78ku",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx",[],["48","49"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx",["50"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx",["51","52","53"],"import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport CSS from 'csstype';\nimport { makeStyles } from '@material-ui/core/styles';\nimport firebase from 'firebase';\n\n\n\ntype Props = {\n    type: String,\n    search: string,\n    email: string | null\n}\n\nconst Filtered = ({type, search, email}: Props) =>{\n\n    type Post = {title: string, body: string, date: string, type: string, email?: string, id: string};\n\n\n    const [posts, setPosts] = useState<Post[]>([]);\n\n\n    const getPosts = () => {\n        fetch('/getPosts')\n            .then(res => res.json())\n            .then(json => setPosts(json));\n        \n\n    };\n\n    useEffect(() => getPosts(), []);\n\n    const deletePost = async (id: string) => {\n        firebase\n        .auth()\n        .currentUser?.getIdToken(true)\n        .then(async (idtoken) => {\n            await axios.delete<string>('/deletePost', {data: {id: id}, headers: {'idtoken': idtoken}});\n        })\n        \n        \n    }\n\n    const postStyle: CSS.Properties = {\n        border: '1px solid red',\n    }\n    \n    const gridStyle: CSS.Properties = {\n        display: 'flex'\n    }\n\n    return(\n            <div>\n                {posts.map(post => \n                    ((post.type===type) && \n                    (post.title.toLowerCase().includes(search.toLowerCase()) || post.body.toLowerCase().includes(search.toLowerCase()))) \n                    && <p key={post.title}>\n                        <div style={postStyle}>\n                        Title: {post.title} <br/>\n                        Date: {post.date} <br/>\n                        Body: {post.body} <br/>                    \n                        {email === post.email ? <div><Button onClick={() => deletePost(post.id)}>Delete</Button></div>: <span></span>}  \n                        </div>    \n                </p>        \n                )}\n            </div>\n        \n                        \n                 \n    \n    )\n}\n\nexport default Filtered;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":59,"column":19,"nodeType":"60","messageId":"61","endLine":59,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":7,"column":10,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"58","severity":1,"message":"64","line":51,"column":11,"nodeType":"60","messageId":"61","endLine":51,"endColumn":36},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'newPost' is assigned a value but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'gridStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]