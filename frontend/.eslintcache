[{"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx":"1","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts":"2","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx":"3","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx":"4","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx":"5","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx":"6","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx":"7","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx":"8","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx":"9","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx":"10","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx":"11"},{"size":500,"mtime":1606177938000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1606177938000,"results":"14","hashOfConfig":"13"},{"size":403,"mtime":1607455177000,"results":"15","hashOfConfig":"13"},{"size":3180,"mtime":1607455177000,"results":"16","hashOfConfig":"13"},{"size":2665,"mtime":1607999264778,"results":"17","hashOfConfig":"13"},{"size":2792,"mtime":1607999264777,"results":"18","hashOfConfig":"13"},{"size":1141,"mtime":1607999264778,"results":"19","hashOfConfig":"13"},{"size":2865,"mtime":1607999264778,"results":"20","hashOfConfig":"13"},{"size":2658,"mtime":1607999264778,"results":"21","hashOfConfig":"13"},{"size":1142,"mtime":1607999264777,"results":"22","hashOfConfig":"13"},{"size":2470,"mtime":1607999264778,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1gmbx11",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx",[],["49","50"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx",["51"],"import React from 'react';\nimport CSS from 'csstype';\nimport cornell_logo from './cornell_logo.png';\nimport whisperlogo from './whisperlogo.png';\nimport 'firebase'\nimport 'firebase/auth';\nfunction HomeContent() {\n\n\n    const logoStyle: CSS.Properties = {\n        marginTop: '15rem',\n        float: 'left',\n        margin: '10rem',\n        marginLeft: '30rem',\n        \n    }\n\n    const whisperLogoStyle: CSS.Properties = {\n        float: 'left',\n        marginLeft: '2rem',\n        marginTop: '7rem'\n    }\n\n    const bodyStyle: CSS.Properties = {\n        marginTop: '5rem'\n    }\n\nreturn (\n    \n        <div>\n            <br/>\n        <body style ={bodyStyle}>\n            Welcome to CUWhisper! This is an interactive and anonymous forum\n            where fellow Cornellians can help and learn from each other regarding\n            the many opportunities, resources, and events that are available on campus. \n        </body>\n        <div >\n        <img style={logoStyle} src={cornell_logo} alt=\"\"/>\n        <img style={whisperLogoStyle} src={whisperlogo} alt=\"\"/>\n        </div>\n    </div>\n    \n    \n\n    );\n}\n\nexport default HomeContent;\n\n\n\n","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx",["52"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx",["53","54"],"import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport {useState} from 'react'\nimport CSS from 'csstype';\n\n\n\ntype Props = {\n    type: String,\n    search: string,\n    email: string | null\n}\n\n\n\nconst Filtered = ({type, search, email}: Props) =>{\n\n    type Post = {title: string, body: string, date: string, type: string, email?: string, id: string};\n\n\n    const [posts, setPosts] = useState<Post[]>([]);\n\n\n    const getPosts = () => {\n        fetch('/getPosts')\n            .then(res => res.json())\n            .then(json => setPosts(json));\n        \n\n        fetch('/getPosts')\n            .then(res => res.text())\n            .then(text => console.log(text))\n\n        /*\n        const res: readonly Post[] = await axios.get('/getPosts');\n        setPosts(res);\n        */\n        \n    };\n\n    useEffect(() => getPosts(), []);\n\n    const deletePost = async (id: string) => {\n        await axios.delete<string>('/deletePost', {data: {id: id}});\n        \n    }\n\n    const postStyle: CSS.Properties = {\n        border: '1px solid red'\n    }\n\n    return(\n        <div>\n\n            <Grid container spacing={3}>\n                <Grid item xs={4}> \n                    <div style={postStyle}>\n                        {posts.map(post => \n                        ((post.type===type) && \n                        (post.title.toLowerCase().includes(search.toLowerCase()) || post.body.toLowerCase().includes(search.toLowerCase()))) \n                        && <p key={post.title}> \n                            Title: {post.title} <br/>\n                            Date: {post.date} <br/>\n                            Body: {post.body} <br/>                    \n                            {email === post.email ? <div><Button onClick={() => deletePost(post.id)}>Delete</Button></div>: <span></span>}\n                        </p>\n                        )}\n                    </div>\n                </Grid>\n                \n                <Grid item xs={4}>\n                    <div style={postStyle}>\n                        Title: Title <br/>\n                        Date: Date <br/>\n                        Body: Body <br/>                    \n                        <div><Button >Delete</Button></div>\n                    </div>\n                </Grid>\n\n\n            </Grid>\n            \n            \n\n\n               \n        </div>\n    )\n}\n\nexport default Filtered;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":9,"column":11,"nodeType":"61","messageId":"62","endLine":9,"endColumn":37},{"ruleId":"59","severity":1,"message":"63","line":53,"column":15,"nodeType":"61","messageId":"62","endLine":53,"endColumn":22},{"ruleId":"59","severity":1,"message":"64","line":17,"column":11,"nodeType":"61","messageId":"62","endLine":17,"endColumn":18},{"ruleId":"59","severity":1,"message":"65","line":24,"column":11,"nodeType":"61","messageId":"62","endLine":24,"endColumn":21},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'titleStyle' is assigned a value but never used.","Identifier","unusedVar","'newPost' is assigned a value but never used.","'getPost' is assigned a value but never used.","'deletePost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]