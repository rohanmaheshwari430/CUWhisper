[{"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx":"1","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts":"2","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx":"3","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx":"4","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx":"5","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx":"6","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx":"7","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx":"8","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx":"9","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx":"10","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx":"11"},{"size":500,"mtime":1606177938000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1606177938000,"results":"14","hashOfConfig":"13"},{"size":403,"mtime":1607455177000,"results":"15","hashOfConfig":"13"},{"size":3180,"mtime":1607455177000,"results":"16","hashOfConfig":"13"},{"size":2792,"mtime":1607999264777,"results":"17","hashOfConfig":"13"},{"size":1141,"mtime":1607999264778,"results":"18","hashOfConfig":"13"},{"size":2929,"mtime":1608002770490,"results":"19","hashOfConfig":"13"},{"size":2658,"mtime":1607999264778,"results":"20","hashOfConfig":"13"},{"size":2665,"mtime":1607999264778,"results":"21","hashOfConfig":"13"},{"size":1142,"mtime":1607999264777,"results":"22","hashOfConfig":"13"},{"size":2020,"mtime":1608050280269,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18q78ku",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx",[],["48","49"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx",["50"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CSS from 'csstype';\nimport { TextField } from '@material-ui/core';\n\ntype Props = {\n    email: any\n}\n\ntype Post = {\n    readonly title: string;\n    readonly body: string;\n    readonly date: string;\n    readonly type: string;\n    readonly email: string;\n    readonly id: string;\n  };\n\nfunction CreatePost({email}: Props){\n\n    const ulStyle: CSS.Properties = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    \n    const updateTitle=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newTitle = event.currentTarget.value;\n        setTitle(newTitle);\n        \n    }\n    const updateBody=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newBody = event.currentTarget.value;\n        setBody(newBody);\n    }\n    const updateDate=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDate = event.currentTarget.value;\n        setDate(newDate);\n    }\n\n\n\n    //function to call create post (takes in title, body, date) \n    const tempID: string = \"-1\"\n\n    const createPost= async (title: string, body: string, date: string, type: string, email: string, id: string) =>{\n        const postBody: Post = {title, body, date, type, email, id};\n        const newPost = await axios.post<string>('/createPost', postBody);\n        setTitle(\"\");\n        setBody(\"\");\n        setDate(\"\");\n    }\n\n    return(\n        <div>\n            <div>\n                <br/>\n                <TextField  id=\"filled-basic\" style={{width: 500}} size=\"small\" label=\"Title\" variant=\"filled\" value={title} onChange={updateTitle}></TextField> <br/> <br/>\n                <TextField id=\"standard-multiline-flexible\" style={{width: 500}} size=\"medium\" label=\"Body\" multiline rows={4} defaultValue=\"Default Value\" value={body} onChange={updateBody} variant=\"filled\" /> <br/> <br/>\n                <TextField id=\"filled-basic\" size=\"small\"  label=\"MM/DD/YY\" variant=\"filled\" value={date} onChange={updateDate}></TextField> <br/>   \n            </div>\n\n            {email != null ? <div><br/>Post to...<br/></div>: <div><br/>You must sign in to post.</div>}\n            <div style={ulStyle}>\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Academics\", email, tempID)}>Academics</Button> </div>: <div></div>}\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Clubs\", email, tempID)}>Clubs</Button> </div>: <div></div>}\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Career\", email, tempID)}>Career</Button> </div>: <div></div>}\n            </div>\n            \n            \n        </div>\n    )\n}\n\nexport default CreatePost;","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx",["51","52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":53,"column":15,"nodeType":"60","messageId":"61","endLine":53,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":7,"column":10,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"58","severity":1,"message":"64","line":50,"column":11,"nodeType":"60","messageId":"61","endLine":50,"endColumn":36},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'newPost' is assigned a value but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'gridStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]