[{"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx":"1","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts":"2","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx":"3","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx":"4","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx":"5","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx":"6","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx":"7","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx":"8","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx":"9","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx":"10","/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx":"11"},{"size":500,"mtime":1606177938000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1606177938000,"results":"14","hashOfConfig":"13"},{"size":403,"mtime":1607455177000,"results":"15","hashOfConfig":"13"},{"size":3180,"mtime":1607455177000,"results":"16","hashOfConfig":"13"},{"size":2268,"mtime":1607986249769,"results":"17","hashOfConfig":"13"},{"size":2665,"mtime":1607978026137,"results":"18","hashOfConfig":"13"},{"size":1012,"mtime":1607978055035,"results":"19","hashOfConfig":"13"},{"size":2792,"mtime":1607978037103,"results":"20","hashOfConfig":"13"},{"size":2658,"mtime":1607978031416,"results":"21","hashOfConfig":"13"},{"size":1792,"mtime":1607986265255,"results":"22","hashOfConfig":"13"},{"size":1142,"mtime":1607977703516,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18q78ku",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/index.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/reportWebVitals.ts",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/App.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Home.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/CreatePost.tsx",["48"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\ntype Props = {\n    email: any\n}\n\ntype Post = {\n    readonly title: string;\n    readonly body: string;\n    readonly date: string;\n    readonly type: string;\n    readonly email: string;\n    readonly id: string;\n  };\n\nfunction CreatePost({email}: Props){\n\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    \n    const updateTitle=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newTitle = event.currentTarget.value;\n        setTitle(newTitle);\n    }\n    const updateBody=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newBody = event.currentTarget.value;\n        setBody(newBody);\n    }\n    const updateDate=(event: React.ChangeEvent<HTMLInputElement>) => {\n        const newDate = event.currentTarget.value;\n        setDate(newDate);\n    }\n\n    //function to call create post (takes in title, body, date) \n    const tempID: string = \"-1\"\n\n    const createPost= async (title: string, body: string, date: string, type: string, email: string, id: string) =>{\n        const postBody: Post = {title, body, date, type, email, id};\n        const newPost = await axios.post<string>('/createPost', postBody);\n    }\n\n    return(\n        <div>\n            <input type=\"text\" placeholder=\"Title\" value={title} onChange={updateTitle}></input><br/>\n            <input type=\"text\" placeholder=\"Body\" value={body} onChange={updateBody}></input><br/>\n            <input type=\"text\" placeholder=\"MM/DD/YY\" value={date} onChange={updateDate}></input><br/>\n\n            {email != null ? <div><br/>Post to...<br/></div>: <div><br/>You must sign in to post.</div>}\n\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Academics\", email, tempID)}>Academics</Button> </div>: <div></div>}\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Career\", email, tempID)}>Career</Button> </div>: <div></div>}\n            {email != null ? <div><Button onClick={()=>createPost(title, body, date, \"Clubs\", email, tempID)}>Clubs</Button> </div>: <div></div>}\n        </div>\n    )\n}\n\nexport default CreatePost;",["49","50"],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Career.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/HomeContent.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Academics.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Clubs.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/Filtered.tsx",[],"/Users/rohanmaheshwari/Desktop/Projects/Cornell Projects/Frontend Development/CUWhisperer/CUWhisper/frontend/src/AllPosts.tsx",[],{"ruleId":"51","severity":1,"message":"52","line":42,"column":15,"nodeType":"53","messageId":"54","endLine":42,"endColumn":22},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"@typescript-eslint/no-unused-vars","'newPost' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-global-assign","no-unsafe-negation"]